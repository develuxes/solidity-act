-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.8 from ParAct.y
-----------------------------------------------------------------------------

state 125 contains 25 reduce/reduce conflicts.
state 140 contains 2 shift/reduce conflicts.
state 141 contains 2 shift/reduce conflicts.

rule 50 is unused

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_pAct -> Act                                 (0)
	%start_pHeader -> Header                           (1)
	%start_pUpdate -> Update                           (2)
	%start_pStorage -> Storage                         (3)
	%start_pLookup -> Lookup                           (4)
	%start_pBExp -> BExp                               (5)
	%start_pExp -> Exp                                 (6)
	%start_pExp1 -> Exp1                               (7)
	%start_pExp2 -> Exp2                               (8)
	%start_pDecl -> Decl                               (9)
	%start_pTDecl -> TDecl                             (10)
	%start_pType -> Type                               (11)
	%start_pListDecl -> ListDecl                       (12)
	%start_pListTDecl -> ListTDecl                     (13)
	%start_pListLookup -> ListLookup                   (14)
	%start_pListBExp -> ListBExp                       (15)
	%start_pListExp -> ListExp                         (16)
	%start_pListUpdate -> ListUpdate                   (17)
	%start_pListHeader -> ListHeader                   (18)
	Ident -> L_ident                                   (19)
	Integer -> L_integ                                 (20)
	Act -> ListHeader                                  (21)
	Header -> 'behaviour' Ident 'of' Ident             (22)
	Header -> 'interface' Ident '(' ListDecl ')'       (23)
	Header -> 'for' 'all' ListTDecl                    (24)
	Header -> 'iff' ListBExp                           (25)
	Header -> 'iff' 'in' 'range' Type ListExp          (26)
	Header -> 'if' ListBExp                            (27)
	Header -> 'storage' ListUpdate                     (28)
	Header -> 'returns' Exp                            (29)
	Update -> Storage '=>' Exp                         (30)
	Update -> Storage                                  (31)
	Update -> Storage '|->' Exp '=>' Exp               (32)
	Update -> Storage '|->' Exp                        (33)
	Storage -> Ident ListLookup                        (34)
	Storage -> Storage '.' Ident                       (35)
	Lookup -> '[' Ident ']'                            (36)
	BExp -> BExp 'and' BExp                            (37)
	BExp -> BExp 'or' BExp                             (38)
	BExp -> Exp '==' Exp                               (39)
	BExp -> Exp '=/=' Exp                              (40)
	BExp -> Exp '<=' Exp                               (41)
	BExp -> Exp '<' Exp                                (42)
	BExp -> Exp '>=' Exp                               (43)
	BExp -> Exp '>' Exp                                (44)
	BExp -> '(' BExp ')'                               (45)
	BExp -> 'true'                                     (46)
	BExp -> 'false'                                    (47)
	Exp -> Exp '+' Exp1                                (48)
	Exp -> Exp '-' Exp1                                (49)
	Exp -> '(' Exp ')'                                 (50)
	Exp -> Exp1                                        (51)
	Exp1 -> Exp1 '*' Exp2                              (52)
	Exp1 -> Exp1 '/' Exp2                              (53)
	Exp1 -> Exp2                                       (54)
	Exp2 -> Integer                                    (55)
	Exp2 -> Storage                                    (56)
	Exp2 -> '(' Exp ')'                                (57)
	Decl -> Type Ident                                 (58)
	TDecl -> Ident ':' Type                            (59)
	Type -> 'uint'                                     (60)
	Type -> 'int'                                      (61)
	Type -> 'uint256'                                  (62)
	Type -> 'int256'                                   (63)
	Type -> 'uint126'                                  (64)
	Type -> 'int126'                                   (65)
	Type -> 'uint8'                                    (66)
	Type -> 'int8'                                     (67)
	Type -> 'address'                                  (68)
	Type -> 'bytes32'                                  (69)
	Type -> 'bool'                                     (70)
	ListDecl ->                                        (71)
	ListDecl -> Decl                                   (72)
	ListDecl -> Decl ',' ListDecl                      (73)
	ListTDecl -> TDecl                                 (74)
	ListTDecl -> TDecl ListTDecl                       (75)
	ListLookup ->                                      (76)
	ListLookup -> ListLookup Lookup                    (77)
	ListBExp -> BExp                                   (78)
	ListBExp -> BExp ListBExp                          (79)
	ListExp -> Exp                                     (80)
	ListExp -> Exp ListExp                             (81)
	ListUpdate -> Update                               (82)
	ListUpdate -> Update ListUpdate                    (83)
	ListHeader -> Header                               (84)
	ListHeader -> Header ListHeader                    (85)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'('            { PT _ (TS _ 1) }
	')'            { PT _ (TS _ 2) }
	'*'            { PT _ (TS _ 3) }
	'+'            { PT _ (TS _ 4) }
	','            { PT _ (TS _ 5) }
	'-'            { PT _ (TS _ 6) }
	'.'            { PT _ (TS _ 7) }
	'/'            { PT _ (TS _ 8) }
	':'            { PT _ (TS _ 9) }
	'<'            { PT _ (TS _ 10) }
	'<='           { PT _ (TS _ 11) }
	'=/='          { PT _ (TS _ 12) }
	'=='           { PT _ (TS _ 13) }
	'=>'           { PT _ (TS _ 14) }
	'>'            { PT _ (TS _ 15) }
	'>='           { PT _ (TS _ 16) }
	'['            { PT _ (TS _ 17) }
	']'            { PT _ (TS _ 18) }
	'address'      { PT _ (TS _ 19) }
	'all'          { PT _ (TS _ 20) }
	'and'          { PT _ (TS _ 21) }
	'behaviour'    { PT _ (TS _ 22) }
	'bool'         { PT _ (TS _ 23) }
	'bytes32'      { PT _ (TS _ 24) }
	'false'        { PT _ (TS _ 25) }
	'for'          { PT _ (TS _ 26) }
	'if'           { PT _ (TS _ 27) }
	'iff'          { PT _ (TS _ 28) }
	'in'           { PT _ (TS _ 29) }
	'int'          { PT _ (TS _ 30) }
	'int126'       { PT _ (TS _ 31) }
	'int256'       { PT _ (TS _ 32) }
	'int8'         { PT _ (TS _ 33) }
	'interface'    { PT _ (TS _ 34) }
	'of'           { PT _ (TS _ 35) }
	'or'           { PT _ (TS _ 36) }
	'range'        { PT _ (TS _ 37) }
	'returns'      { PT _ (TS _ 38) }
	'storage'      { PT _ (TS _ 39) }
	'true'         { PT _ (TS _ 40) }
	'uint'         { PT _ (TS _ 41) }
	'uint126'      { PT _ (TS _ 42) }
	'uint256'      { PT _ (TS _ 43) }
	'uint8'        { PT _ (TS _ 44) }
	'|->'          { PT _ (TS _ 45) }
	L_ident        { PT _ (TV $$) }
	L_integ        { PT _ (TI $$) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_pAct     rule  0
	%start_pHeader  rule  1
	%start_pUpdate  rule  2
	%start_pStorage rule  3
	%start_pLookup  rule  4
	%start_pBExp    rule  5
	%start_pExp     rule  6
	%start_pExp1    rule  7
	%start_pExp2    rule  8
	%start_pDecl    rule  9
	%start_pTDecl   rule  10
	%start_pType    rule  11
	%start_pListDecl rule  12
	%start_pListTDecl rule  13
	%start_pListLookup rule  14
	%start_pListBExp rule  15
	%start_pListExp rule  16
	%start_pListUpdate rule  17
	%start_pListHeader rule  18
	Ident           rule  19
	Integer         rule  20
	Act             rule  21
	Header          rules 22, 23, 24, 25, 26, 27, 28, 29
	Update          rules 30, 31, 32, 33
	Storage         rules 34, 35
	Lookup          rule  36
	BExp            rules 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47
	Exp             rules 48, 49, 50, 51
	Exp1            rules 52, 53, 54
	Exp2            rules 55, 56, 57
	Decl            rule  58
	TDecl           rule  59
	Type            rules 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70
	ListDecl        rules 71, 72, 73
	ListTDecl       rules 74, 75
	ListLookup      rules 76, 77
	ListBExp        rules 78, 79
	ListExp         rules 80, 81
	ListUpdate      rules 82, 83
	ListHeader      rules 84, 85

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	'behaviour'    shift, and enter state 23
	'for'          shift, and enter state 24
	'if'           shift, and enter state 25
	'iff'          shift, and enter state 26
	'interface'    shift, and enter state 27
	'returns'      shift, and enter state 28
	'storage'      shift, and enter state 29

	Act            goto state 79
	Header         goto state 21
	ListHeader     goto state 80

State 1


	'behaviour'    shift, and enter state 23
	'for'          shift, and enter state 24
	'if'           shift, and enter state 25
	'iff'          shift, and enter state 26
	'interface'    shift, and enter state 27
	'returns'      shift, and enter state 28
	'storage'      shift, and enter state 29

	Header         goto state 78

State 2


	L_ident        shift, and enter state 20

	Ident          goto state 30
	Update         goto state 77
	Storage        goto state 32

State 3


	L_ident        shift, and enter state 20

	Ident          goto state 30
	Storage        goto state 76

State 4


	'['            shift, and enter state 75

	Lookup         goto state 74

State 5


	'('            shift, and enter state 45
	'false'        shift, and enter state 46
	'true'         shift, and enter state 47
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 41

	Ident          goto state 30
	Integer        goto state 34
	Storage        goto state 35
	BExp           goto state 73
	Exp            goto state 43
	Exp1           goto state 37
	Exp2           goto state 38

State 6


	'('            shift, and enter state 40
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 41

	Ident          goto state 30
	Integer        goto state 34
	Storage        goto state 35
	Exp            goto state 72
	Exp1           goto state 37
	Exp2           goto state 38

State 7


	'('            shift, and enter state 70
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 41

	Ident          goto state 30
	Integer        goto state 34
	Storage        goto state 35
	Exp1           goto state 71
	Exp2           goto state 38

State 8


	'('            shift, and enter state 70
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 41

	Ident          goto state 30
	Integer        goto state 34
	Storage        goto state 35
	Exp2           goto state 69

State 9


	'address'      shift, and enter state 55
	'bool'         shift, and enter state 56
	'bytes32'      shift, and enter state 57
	'int'          shift, and enter state 58
	'int126'       shift, and enter state 59
	'int256'       shift, and enter state 60
	'int8'         shift, and enter state 61
	'uint'         shift, and enter state 62
	'uint126'      shift, and enter state 63
	'uint256'      shift, and enter state 64
	'uint8'        shift, and enter state 65

	Decl           goto state 68
	Type           goto state 53

State 10


	L_ident        shift, and enter state 20

	Ident          goto state 49
	TDecl          goto state 67

State 11


	'address'      shift, and enter state 55
	'bool'         shift, and enter state 56
	'bytes32'      shift, and enter state 57
	'int'          shift, and enter state 58
	'int126'       shift, and enter state 59
	'int256'       shift, and enter state 60
	'int8'         shift, and enter state 61
	'uint'         shift, and enter state 62
	'uint126'      shift, and enter state 63
	'uint256'      shift, and enter state 64
	'uint8'        shift, and enter state 65

	Type           goto state 66

State 12


	'address'      shift, and enter state 55
	'bool'         shift, and enter state 56
	'bytes32'      shift, and enter state 57
	'int'          shift, and enter state 58
	'int126'       shift, and enter state 59
	'int256'       shift, and enter state 60
	'int8'         shift, and enter state 61
	'uint'         shift, and enter state 62
	'uint126'      shift, and enter state 63
	'uint256'      shift, and enter state 64
	'uint8'        shift, and enter state 65
	%eof           reduce using rule 71

	Decl           goto state 52
	Type           goto state 53
	ListDecl       goto state 54

State 13


	L_ident        shift, and enter state 20

	Ident          goto state 49
	TDecl          goto state 50
	ListTDecl      goto state 51

State 14


	'['            reduce using rule 76
	%eof           reduce using rule 76

	ListLookup     goto state 48

State 15


	'('            shift, and enter state 45
	'false'        shift, and enter state 46
	'true'         shift, and enter state 47
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 41

	Ident          goto state 30
	Integer        goto state 34
	Storage        goto state 35
	BExp           goto state 42
	Exp            goto state 43
	Exp1           goto state 37
	Exp2           goto state 38
	ListBExp       goto state 44

State 16


	'('            shift, and enter state 40
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 41

	Ident          goto state 30
	Integer        goto state 34
	Storage        goto state 35
	Exp            goto state 36
	Exp1           goto state 37
	Exp2           goto state 38
	ListExp        goto state 39

State 17


	L_ident        shift, and enter state 20

	Ident          goto state 30
	Update         goto state 31
	Storage        goto state 32
	ListUpdate     goto state 33

State 18


	'behaviour'    shift, and enter state 23
	'for'          shift, and enter state 24
	'if'           shift, and enter state 25
	'iff'          shift, and enter state 26
	'interface'    shift, and enter state 27
	'returns'      shift, and enter state 28
	'storage'      shift, and enter state 29

	Header         goto state 21
	ListHeader     goto state 22

State 19


	L_ident        shift, and enter state 20


State 20

	Ident -> L_ident .                                  (rule 19)

	'('            reduce using rule 19
	')'            reduce using rule 19
	'*'            reduce using rule 19
	'+'            reduce using rule 19
	','            reduce using rule 19
	'-'            reduce using rule 19
	'.'            reduce using rule 19
	'/'            reduce using rule 19
	':'            reduce using rule 19
	'<'            reduce using rule 19
	'<='           reduce using rule 19
	'=/='          reduce using rule 19
	'=='           reduce using rule 19
	'=>'           reduce using rule 19
	'>'            reduce using rule 19
	'>='           reduce using rule 19
	'['            reduce using rule 19
	']'            reduce using rule 19
	'and'          reduce using rule 19
	'behaviour'    reduce using rule 19
	'false'        reduce using rule 19
	'for'          reduce using rule 19
	'if'           reduce using rule 19
	'iff'          reduce using rule 19
	'interface'    reduce using rule 19
	'of'           reduce using rule 19
	'or'           reduce using rule 19
	'returns'      reduce using rule 19
	'storage'      reduce using rule 19
	'true'         reduce using rule 19
	'|->'          reduce using rule 19
	L_ident        reduce using rule 19
	L_integ        reduce using rule 19
	%eof           reduce using rule 19


State 21

	ListHeader -> Header .                              (rule 84)
	ListHeader -> Header . ListHeader                   (rule 85)

	'behaviour'    shift, and enter state 23
	'for'          shift, and enter state 24
	'if'           shift, and enter state 25
	'iff'          shift, and enter state 26
	'interface'    shift, and enter state 27
	'returns'      shift, and enter state 28
	'storage'      shift, and enter state 29
	%eof           reduce using rule 84

	Header         goto state 21
	ListHeader     goto state 118

State 22

	%start_pListHeader -> ListHeader .                  (rule 18)

	%eof           accept


State 23

	Header -> 'behaviour' . Ident 'of' Ident            (rule 22)

	L_ident        shift, and enter state 20

	Ident          goto state 117

State 24

	Header -> 'for' . 'all' ListTDecl                   (rule 24)

	'all'          shift, and enter state 116


State 25

	Header -> 'if' . ListBExp                           (rule 27)

	'('            shift, and enter state 45
	'false'        shift, and enter state 46
	'true'         shift, and enter state 47
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 41

	Ident          goto state 30
	Integer        goto state 34
	Storage        goto state 35
	BExp           goto state 42
	Exp            goto state 43
	Exp1           goto state 37
	Exp2           goto state 38
	ListBExp       goto state 115

State 26

	Header -> 'iff' . ListBExp                          (rule 25)
	Header -> 'iff' . 'in' 'range' Type ListExp         (rule 26)

	'('            shift, and enter state 45
	'false'        shift, and enter state 46
	'in'           shift, and enter state 114
	'true'         shift, and enter state 47
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 41

	Ident          goto state 30
	Integer        goto state 34
	Storage        goto state 35
	BExp           goto state 42
	Exp            goto state 43
	Exp1           goto state 37
	Exp2           goto state 38
	ListBExp       goto state 113

State 27

	Header -> 'interface' . Ident '(' ListDecl ')'      (rule 23)

	L_ident        shift, and enter state 20

	Ident          goto state 112

State 28

	Header -> 'returns' . Exp                           (rule 29)

	'('            shift, and enter state 40
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 41

	Ident          goto state 30
	Integer        goto state 34
	Storage        goto state 35
	Exp            goto state 111
	Exp1           goto state 37
	Exp2           goto state 38

State 29

	Header -> 'storage' . ListUpdate                    (rule 28)

	L_ident        shift, and enter state 20

	Ident          goto state 30
	Update         goto state 31
	Storage        goto state 32
	ListUpdate     goto state 110

State 30

	Storage -> Ident . ListLookup                       (rule 34)

	'('            reduce using rule 76
	')'            reduce using rule 76
	'*'            reduce using rule 76
	'+'            reduce using rule 76
	'-'            reduce using rule 76
	'.'            reduce using rule 76
	'/'            reduce using rule 76
	'<'            reduce using rule 76
	'<='           reduce using rule 76
	'=/='          reduce using rule 76
	'=='           reduce using rule 76
	'=>'           reduce using rule 76
	'>'            reduce using rule 76
	'>='           reduce using rule 76
	'['            reduce using rule 76
	'and'          reduce using rule 76
	'behaviour'    reduce using rule 76
	'false'        reduce using rule 76
	'for'          reduce using rule 76
	'if'           reduce using rule 76
	'iff'          reduce using rule 76
	'interface'    reduce using rule 76
	'or'           reduce using rule 76
	'returns'      reduce using rule 76
	'storage'      reduce using rule 76
	'true'         reduce using rule 76
	'|->'          reduce using rule 76
	L_ident        reduce using rule 76
	L_integ        reduce using rule 76
	%eof           reduce using rule 76

	ListLookup     goto state 109

State 31

	ListUpdate -> Update .                              (rule 82)
	ListUpdate -> Update . ListUpdate                   (rule 83)

	'behaviour'    reduce using rule 82
	'for'          reduce using rule 82
	'if'           reduce using rule 82
	'iff'          reduce using rule 82
	'interface'    reduce using rule 82
	'returns'      reduce using rule 82
	'storage'      reduce using rule 82
	L_ident        shift, and enter state 20
	%eof           reduce using rule 82

	Ident          goto state 30
	Update         goto state 31
	Storage        goto state 32
	ListUpdate     goto state 108

State 32

	Update -> Storage . '=>' Exp                        (rule 30)
	Update -> Storage .                                 (rule 31)
	Update -> Storage . '|->' Exp '=>' Exp              (rule 32)
	Update -> Storage . '|->' Exp                       (rule 33)
	Storage -> Storage . '.' Ident                      (rule 35)

	'.'            shift, and enter state 81
	'=>'           shift, and enter state 106
	'behaviour'    reduce using rule 31
	'for'          reduce using rule 31
	'if'           reduce using rule 31
	'iff'          reduce using rule 31
	'interface'    reduce using rule 31
	'returns'      reduce using rule 31
	'storage'      reduce using rule 31
	'|->'          shift, and enter state 107
	L_ident        reduce using rule 31
	%eof           reduce using rule 31


State 33

	%start_pListUpdate -> ListUpdate .                  (rule 17)

	%eof           accept


State 34

	Exp2 -> Integer .                                   (rule 55)

	'('            reduce using rule 55
	')'            reduce using rule 55
	'*'            reduce using rule 55
	'+'            reduce using rule 55
	'-'            reduce using rule 55
	'/'            reduce using rule 55
	'<'            reduce using rule 55
	'<='           reduce using rule 55
	'=/='          reduce using rule 55
	'=='           reduce using rule 55
	'=>'           reduce using rule 55
	'>'            reduce using rule 55
	'>='           reduce using rule 55
	'and'          reduce using rule 55
	'behaviour'    reduce using rule 55
	'false'        reduce using rule 55
	'for'          reduce using rule 55
	'if'           reduce using rule 55
	'iff'          reduce using rule 55
	'interface'    reduce using rule 55
	'or'           reduce using rule 55
	'returns'      reduce using rule 55
	'storage'      reduce using rule 55
	'true'         reduce using rule 55
	L_ident        reduce using rule 55
	L_integ        reduce using rule 55
	%eof           reduce using rule 55


State 35

	Storage -> Storage . '.' Ident                      (rule 35)
	Exp2 -> Storage .                                   (rule 56)

	'('            reduce using rule 56
	')'            reduce using rule 56
	'*'            reduce using rule 56
	'+'            reduce using rule 56
	'-'            reduce using rule 56
	'.'            shift, and enter state 81
	'/'            reduce using rule 56
	'<'            reduce using rule 56
	'<='           reduce using rule 56
	'=/='          reduce using rule 56
	'=='           reduce using rule 56
	'=>'           reduce using rule 56
	'>'            reduce using rule 56
	'>='           reduce using rule 56
	'and'          reduce using rule 56
	'behaviour'    reduce using rule 56
	'false'        reduce using rule 56
	'for'          reduce using rule 56
	'if'           reduce using rule 56
	'iff'          reduce using rule 56
	'interface'    reduce using rule 56
	'or'           reduce using rule 56
	'returns'      reduce using rule 56
	'storage'      reduce using rule 56
	'true'         reduce using rule 56
	L_ident        reduce using rule 56
	L_integ        reduce using rule 56
	%eof           reduce using rule 56


State 36

	Exp -> Exp . '+' Exp1                               (rule 48)
	Exp -> Exp . '-' Exp1                               (rule 49)
	ListExp -> Exp .                                    (rule 80)
	ListExp -> Exp . ListExp                            (rule 81)

	'('            shift, and enter state 40
	'+'            shift, and enter state 85
	'-'            shift, and enter state 86
	'behaviour'    reduce using rule 80
	'for'          reduce using rule 80
	'if'           reduce using rule 80
	'iff'          reduce using rule 80
	'interface'    reduce using rule 80
	'returns'      reduce using rule 80
	'storage'      reduce using rule 80
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 41
	%eof           reduce using rule 80

	Ident          goto state 30
	Integer        goto state 34
	Storage        goto state 35
	Exp            goto state 36
	Exp1           goto state 37
	Exp2           goto state 38
	ListExp        goto state 105

State 37

	Exp -> Exp1 .                                       (rule 51)
	Exp1 -> Exp1 . '*' Exp2                             (rule 52)
	Exp1 -> Exp1 . '/' Exp2                             (rule 53)

	'('            reduce using rule 51
	')'            reduce using rule 51
	'*'            shift, and enter state 87
	'+'            reduce using rule 51
	'-'            reduce using rule 51
	'/'            shift, and enter state 88
	'<'            reduce using rule 51
	'<='           reduce using rule 51
	'=/='          reduce using rule 51
	'=='           reduce using rule 51
	'=>'           reduce using rule 51
	'>'            reduce using rule 51
	'>='           reduce using rule 51
	'and'          reduce using rule 51
	'behaviour'    reduce using rule 51
	'false'        reduce using rule 51
	'for'          reduce using rule 51
	'if'           reduce using rule 51
	'iff'          reduce using rule 51
	'interface'    reduce using rule 51
	'or'           reduce using rule 51
	'returns'      reduce using rule 51
	'storage'      reduce using rule 51
	'true'         reduce using rule 51
	L_ident        reduce using rule 51
	L_integ        reduce using rule 51
	%eof           reduce using rule 51


State 38

	Exp1 -> Exp2 .                                      (rule 54)

	'('            reduce using rule 54
	')'            reduce using rule 54
	'*'            reduce using rule 54
	'+'            reduce using rule 54
	'-'            reduce using rule 54
	'/'            reduce using rule 54
	'<'            reduce using rule 54
	'<='           reduce using rule 54
	'=/='          reduce using rule 54
	'=='           reduce using rule 54
	'=>'           reduce using rule 54
	'>'            reduce using rule 54
	'>='           reduce using rule 54
	'and'          reduce using rule 54
	'behaviour'    reduce using rule 54
	'false'        reduce using rule 54
	'for'          reduce using rule 54
	'if'           reduce using rule 54
	'iff'          reduce using rule 54
	'interface'    reduce using rule 54
	'or'           reduce using rule 54
	'returns'      reduce using rule 54
	'storage'      reduce using rule 54
	'true'         reduce using rule 54
	L_ident        reduce using rule 54
	L_integ        reduce using rule 54
	%eof           reduce using rule 54


State 39

	%start_pListExp -> ListExp .                        (rule 16)

	%eof           accept


State 40

	Exp -> '(' . Exp ')'                                (rule 50)
	Exp2 -> '(' . Exp ')'                               (rule 57)

	'('            shift, and enter state 40
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 41

	Ident          goto state 30
	Integer        goto state 34
	Storage        goto state 35
	Exp            goto state 104
	Exp1           goto state 37
	Exp2           goto state 38

State 41

	Integer -> L_integ .                                (rule 20)

	'('            reduce using rule 20
	')'            reduce using rule 20
	'*'            reduce using rule 20
	'+'            reduce using rule 20
	'-'            reduce using rule 20
	'/'            reduce using rule 20
	'<'            reduce using rule 20
	'<='           reduce using rule 20
	'=/='          reduce using rule 20
	'=='           reduce using rule 20
	'=>'           reduce using rule 20
	'>'            reduce using rule 20
	'>='           reduce using rule 20
	'and'          reduce using rule 20
	'behaviour'    reduce using rule 20
	'false'        reduce using rule 20
	'for'          reduce using rule 20
	'if'           reduce using rule 20
	'iff'          reduce using rule 20
	'interface'    reduce using rule 20
	'or'           reduce using rule 20
	'returns'      reduce using rule 20
	'storage'      reduce using rule 20
	'true'         reduce using rule 20
	L_ident        reduce using rule 20
	L_integ        reduce using rule 20
	%eof           reduce using rule 20


State 42

	BExp -> BExp . 'and' BExp                           (rule 37)
	BExp -> BExp . 'or' BExp                            (rule 38)
	ListBExp -> BExp .                                  (rule 78)
	ListBExp -> BExp . ListBExp                         (rule 79)

	'('            shift, and enter state 45
	'and'          shift, and enter state 83
	'behaviour'    reduce using rule 78
	'false'        shift, and enter state 46
	'for'          reduce using rule 78
	'if'           reduce using rule 78
	'iff'          reduce using rule 78
	'interface'    reduce using rule 78
	'or'           shift, and enter state 84
	'returns'      reduce using rule 78
	'storage'      reduce using rule 78
	'true'         shift, and enter state 47
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 41
	%eof           reduce using rule 78

	Ident          goto state 30
	Integer        goto state 34
	Storage        goto state 35
	BExp           goto state 42
	Exp            goto state 43
	Exp1           goto state 37
	Exp2           goto state 38
	ListBExp       goto state 103

State 43

	BExp -> Exp . '==' Exp                              (rule 39)
	BExp -> Exp . '=/=' Exp                             (rule 40)
	BExp -> Exp . '<=' Exp                              (rule 41)
	BExp -> Exp . '<' Exp                               (rule 42)
	BExp -> Exp . '>=' Exp                              (rule 43)
	BExp -> Exp . '>' Exp                               (rule 44)
	Exp -> Exp . '+' Exp1                               (rule 48)
	Exp -> Exp . '-' Exp1                               (rule 49)

	'+'            shift, and enter state 85
	'-'            shift, and enter state 86
	'<'            shift, and enter state 97
	'<='           shift, and enter state 98
	'=/='          shift, and enter state 99
	'=='           shift, and enter state 100
	'>'            shift, and enter state 101
	'>='           shift, and enter state 102


State 44

	%start_pListBExp -> ListBExp .                      (rule 15)

	%eof           accept


State 45

	BExp -> '(' . BExp ')'                              (rule 45)
	Exp -> '(' . Exp ')'                                (rule 50)
	Exp2 -> '(' . Exp ')'                               (rule 57)

	'('            shift, and enter state 45
	'false'        shift, and enter state 46
	'true'         shift, and enter state 47
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 41

	Ident          goto state 30
	Integer        goto state 34
	Storage        goto state 35
	BExp           goto state 95
	Exp            goto state 96
	Exp1           goto state 37
	Exp2           goto state 38

State 46

	BExp -> 'false' .                                   (rule 47)

	'('            reduce using rule 47
	')'            reduce using rule 47
	'and'          reduce using rule 47
	'behaviour'    reduce using rule 47
	'false'        reduce using rule 47
	'for'          reduce using rule 47
	'if'           reduce using rule 47
	'iff'          reduce using rule 47
	'interface'    reduce using rule 47
	'or'           reduce using rule 47
	'returns'      reduce using rule 47
	'storage'      reduce using rule 47
	'true'         reduce using rule 47
	L_ident        reduce using rule 47
	L_integ        reduce using rule 47
	%eof           reduce using rule 47


State 47

	BExp -> 'true' .                                    (rule 46)

	'('            reduce using rule 46
	')'            reduce using rule 46
	'and'          reduce using rule 46
	'behaviour'    reduce using rule 46
	'false'        reduce using rule 46
	'for'          reduce using rule 46
	'if'           reduce using rule 46
	'iff'          reduce using rule 46
	'interface'    reduce using rule 46
	'or'           reduce using rule 46
	'returns'      reduce using rule 46
	'storage'      reduce using rule 46
	'true'         reduce using rule 46
	L_ident        reduce using rule 46
	L_integ        reduce using rule 46
	%eof           reduce using rule 46


State 48

	%start_pListLookup -> ListLookup .                  (rule 14)
	ListLookup -> ListLookup . Lookup                   (rule 77)

	'['            shift, and enter state 75
	%eof           accept

	Lookup         goto state 94

State 49

	TDecl -> Ident . ':' Type                           (rule 59)

	':'            shift, and enter state 93


State 50

	ListTDecl -> TDecl .                                (rule 74)
	ListTDecl -> TDecl . ListTDecl                      (rule 75)

	'behaviour'    reduce using rule 74
	'for'          reduce using rule 74
	'if'           reduce using rule 74
	'iff'          reduce using rule 74
	'interface'    reduce using rule 74
	'returns'      reduce using rule 74
	'storage'      reduce using rule 74
	L_ident        shift, and enter state 20
	%eof           reduce using rule 74

	Ident          goto state 49
	TDecl          goto state 50
	ListTDecl      goto state 92

State 51

	%start_pListTDecl -> ListTDecl .                    (rule 13)

	%eof           accept


State 52

	ListDecl -> Decl .                                  (rule 72)
	ListDecl -> Decl . ',' ListDecl                     (rule 73)

	')'            reduce using rule 72
	','            shift, and enter state 91
	%eof           reduce using rule 72


State 53

	Decl -> Type . Ident                                (rule 58)

	L_ident        shift, and enter state 20

	Ident          goto state 90

State 54

	%start_pListDecl -> ListDecl .                      (rule 12)

	%eof           accept


State 55

	Type -> 'address' .                                 (rule 68)

	'('            reduce using rule 68
	'behaviour'    reduce using rule 68
	'for'          reduce using rule 68
	'if'           reduce using rule 68
	'iff'          reduce using rule 68
	'interface'    reduce using rule 68
	'returns'      reduce using rule 68
	'storage'      reduce using rule 68
	L_ident        reduce using rule 68
	L_integ        reduce using rule 68
	%eof           reduce using rule 68


State 56

	Type -> 'bool' .                                    (rule 70)

	'('            reduce using rule 70
	'behaviour'    reduce using rule 70
	'for'          reduce using rule 70
	'if'           reduce using rule 70
	'iff'          reduce using rule 70
	'interface'    reduce using rule 70
	'returns'      reduce using rule 70
	'storage'      reduce using rule 70
	L_ident        reduce using rule 70
	L_integ        reduce using rule 70
	%eof           reduce using rule 70


State 57

	Type -> 'bytes32' .                                 (rule 69)

	'('            reduce using rule 69
	'behaviour'    reduce using rule 69
	'for'          reduce using rule 69
	'if'           reduce using rule 69
	'iff'          reduce using rule 69
	'interface'    reduce using rule 69
	'returns'      reduce using rule 69
	'storage'      reduce using rule 69
	L_ident        reduce using rule 69
	L_integ        reduce using rule 69
	%eof           reduce using rule 69


State 58

	Type -> 'int' .                                     (rule 61)

	'('            reduce using rule 61
	'behaviour'    reduce using rule 61
	'for'          reduce using rule 61
	'if'           reduce using rule 61
	'iff'          reduce using rule 61
	'interface'    reduce using rule 61
	'returns'      reduce using rule 61
	'storage'      reduce using rule 61
	L_ident        reduce using rule 61
	L_integ        reduce using rule 61
	%eof           reduce using rule 61


State 59

	Type -> 'int126' .                                  (rule 65)

	'('            reduce using rule 65
	'behaviour'    reduce using rule 65
	'for'          reduce using rule 65
	'if'           reduce using rule 65
	'iff'          reduce using rule 65
	'interface'    reduce using rule 65
	'returns'      reduce using rule 65
	'storage'      reduce using rule 65
	L_ident        reduce using rule 65
	L_integ        reduce using rule 65
	%eof           reduce using rule 65


State 60

	Type -> 'int256' .                                  (rule 63)

	'('            reduce using rule 63
	'behaviour'    reduce using rule 63
	'for'          reduce using rule 63
	'if'           reduce using rule 63
	'iff'          reduce using rule 63
	'interface'    reduce using rule 63
	'returns'      reduce using rule 63
	'storage'      reduce using rule 63
	L_ident        reduce using rule 63
	L_integ        reduce using rule 63
	%eof           reduce using rule 63


State 61

	Type -> 'int8' .                                    (rule 67)

	'('            reduce using rule 67
	'behaviour'    reduce using rule 67
	'for'          reduce using rule 67
	'if'           reduce using rule 67
	'iff'          reduce using rule 67
	'interface'    reduce using rule 67
	'returns'      reduce using rule 67
	'storage'      reduce using rule 67
	L_ident        reduce using rule 67
	L_integ        reduce using rule 67
	%eof           reduce using rule 67


State 62

	Type -> 'uint' .                                    (rule 60)

	'('            reduce using rule 60
	'behaviour'    reduce using rule 60
	'for'          reduce using rule 60
	'if'           reduce using rule 60
	'iff'          reduce using rule 60
	'interface'    reduce using rule 60
	'returns'      reduce using rule 60
	'storage'      reduce using rule 60
	L_ident        reduce using rule 60
	L_integ        reduce using rule 60
	%eof           reduce using rule 60


State 63

	Type -> 'uint126' .                                 (rule 64)

	'('            reduce using rule 64
	'behaviour'    reduce using rule 64
	'for'          reduce using rule 64
	'if'           reduce using rule 64
	'iff'          reduce using rule 64
	'interface'    reduce using rule 64
	'returns'      reduce using rule 64
	'storage'      reduce using rule 64
	L_ident        reduce using rule 64
	L_integ        reduce using rule 64
	%eof           reduce using rule 64


State 64

	Type -> 'uint256' .                                 (rule 62)

	'('            reduce using rule 62
	'behaviour'    reduce using rule 62
	'for'          reduce using rule 62
	'if'           reduce using rule 62
	'iff'          reduce using rule 62
	'interface'    reduce using rule 62
	'returns'      reduce using rule 62
	'storage'      reduce using rule 62
	L_ident        reduce using rule 62
	L_integ        reduce using rule 62
	%eof           reduce using rule 62


State 65

	Type -> 'uint8' .                                   (rule 66)

	'('            reduce using rule 66
	'behaviour'    reduce using rule 66
	'for'          reduce using rule 66
	'if'           reduce using rule 66
	'iff'          reduce using rule 66
	'interface'    reduce using rule 66
	'returns'      reduce using rule 66
	'storage'      reduce using rule 66
	L_ident        reduce using rule 66
	L_integ        reduce using rule 66
	%eof           reduce using rule 66


State 66

	%start_pType -> Type .                              (rule 11)

	%eof           accept


State 67

	%start_pTDecl -> TDecl .                            (rule 10)

	%eof           accept


State 68

	%start_pDecl -> Decl .                              (rule 9)

	%eof           accept


State 69

	%start_pExp2 -> Exp2 .                              (rule 8)

	%eof           accept


State 70

	Exp2 -> '(' . Exp ')'                               (rule 57)

	'('            shift, and enter state 40
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 41

	Ident          goto state 30
	Integer        goto state 34
	Storage        goto state 35
	Exp            goto state 89
	Exp1           goto state 37
	Exp2           goto state 38

State 71

	%start_pExp1 -> Exp1 .                              (rule 7)
	Exp1 -> Exp1 . '*' Exp2                             (rule 52)
	Exp1 -> Exp1 . '/' Exp2                             (rule 53)

	'*'            shift, and enter state 87
	'/'            shift, and enter state 88
	%eof           accept


State 72

	%start_pExp -> Exp .                                (rule 6)
	Exp -> Exp . '+' Exp1                               (rule 48)
	Exp -> Exp . '-' Exp1                               (rule 49)

	'+'            shift, and enter state 85
	'-'            shift, and enter state 86
	%eof           accept


State 73

	%start_pBExp -> BExp .                              (rule 5)
	BExp -> BExp . 'and' BExp                           (rule 37)
	BExp -> BExp . 'or' BExp                            (rule 38)

	'and'          shift, and enter state 83
	'or'           shift, and enter state 84
	%eof           accept


State 74

	%start_pLookup -> Lookup .                          (rule 4)

	%eof           accept


State 75

	Lookup -> '[' . Ident ']'                           (rule 36)

	L_ident        shift, and enter state 20

	Ident          goto state 82

State 76

	%start_pStorage -> Storage .                        (rule 3)
	Storage -> Storage . '.' Ident                      (rule 35)

	'.'            shift, and enter state 81
	%eof           accept


State 77

	%start_pUpdate -> Update .                          (rule 2)

	%eof           accept


State 78

	%start_pHeader -> Header .                          (rule 1)

	%eof           accept


State 79

	%start_pAct -> Act .                                (rule 0)

	%eof           accept


State 80

	Act -> ListHeader .                                 (rule 21)

	%eof           reduce using rule 21


State 81

	Storage -> Storage '.' . Ident                      (rule 35)

	L_ident        shift, and enter state 20

	Ident          goto state 143

State 82

	Lookup -> '[' Ident . ']'                           (rule 36)

	']'            shift, and enter state 142


State 83

	BExp -> BExp 'and' . BExp                           (rule 37)

	'('            shift, and enter state 45
	'false'        shift, and enter state 46
	'true'         shift, and enter state 47
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 41

	Ident          goto state 30
	Integer        goto state 34
	Storage        goto state 35
	BExp           goto state 141
	Exp            goto state 43
	Exp1           goto state 37
	Exp2           goto state 38

State 84

	BExp -> BExp 'or' . BExp                            (rule 38)

	'('            shift, and enter state 45
	'false'        shift, and enter state 46
	'true'         shift, and enter state 47
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 41

	Ident          goto state 30
	Integer        goto state 34
	Storage        goto state 35
	BExp           goto state 140
	Exp            goto state 43
	Exp1           goto state 37
	Exp2           goto state 38

State 85

	Exp -> Exp '+' . Exp1                               (rule 48)

	'('            shift, and enter state 70
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 41

	Ident          goto state 30
	Integer        goto state 34
	Storage        goto state 35
	Exp1           goto state 139
	Exp2           goto state 38

State 86

	Exp -> Exp '-' . Exp1                               (rule 49)

	'('            shift, and enter state 70
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 41

	Ident          goto state 30
	Integer        goto state 34
	Storage        goto state 35
	Exp1           goto state 138
	Exp2           goto state 38

State 87

	Exp1 -> Exp1 '*' . Exp2                             (rule 52)

	'('            shift, and enter state 70
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 41

	Ident          goto state 30
	Integer        goto state 34
	Storage        goto state 35
	Exp2           goto state 137

State 88

	Exp1 -> Exp1 '/' . Exp2                             (rule 53)

	'('            shift, and enter state 70
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 41

	Ident          goto state 30
	Integer        goto state 34
	Storage        goto state 35
	Exp2           goto state 136

State 89

	Exp -> Exp . '+' Exp1                               (rule 48)
	Exp -> Exp . '-' Exp1                               (rule 49)
	Exp2 -> '(' Exp . ')'                               (rule 57)

	')'            shift, and enter state 135
	'+'            shift, and enter state 85
	'-'            shift, and enter state 86


State 90

	Decl -> Type Ident .                                (rule 58)

	')'            reduce using rule 58
	','            reduce using rule 58
	%eof           reduce using rule 58


State 91

	ListDecl -> Decl ',' . ListDecl                     (rule 73)

	')'            reduce using rule 71
	'address'      shift, and enter state 55
	'bool'         shift, and enter state 56
	'bytes32'      shift, and enter state 57
	'int'          shift, and enter state 58
	'int126'       shift, and enter state 59
	'int256'       shift, and enter state 60
	'int8'         shift, and enter state 61
	'uint'         shift, and enter state 62
	'uint126'      shift, and enter state 63
	'uint256'      shift, and enter state 64
	'uint8'        shift, and enter state 65
	%eof           reduce using rule 71

	Decl           goto state 52
	Type           goto state 53
	ListDecl       goto state 134

State 92

	ListTDecl -> TDecl ListTDecl .                      (rule 75)

	'behaviour'    reduce using rule 75
	'for'          reduce using rule 75
	'if'           reduce using rule 75
	'iff'          reduce using rule 75
	'interface'    reduce using rule 75
	'returns'      reduce using rule 75
	'storage'      reduce using rule 75
	%eof           reduce using rule 75


State 93

	TDecl -> Ident ':' . Type                           (rule 59)

	'address'      shift, and enter state 55
	'bool'         shift, and enter state 56
	'bytes32'      shift, and enter state 57
	'int'          shift, and enter state 58
	'int126'       shift, and enter state 59
	'int256'       shift, and enter state 60
	'int8'         shift, and enter state 61
	'uint'         shift, and enter state 62
	'uint126'      shift, and enter state 63
	'uint256'      shift, and enter state 64
	'uint8'        shift, and enter state 65

	Type           goto state 133

State 94

	ListLookup -> ListLookup Lookup .                   (rule 77)

	'('            reduce using rule 77
	')'            reduce using rule 77
	'*'            reduce using rule 77
	'+'            reduce using rule 77
	'-'            reduce using rule 77
	'.'            reduce using rule 77
	'/'            reduce using rule 77
	'<'            reduce using rule 77
	'<='           reduce using rule 77
	'=/='          reduce using rule 77
	'=='           reduce using rule 77
	'=>'           reduce using rule 77
	'>'            reduce using rule 77
	'>='           reduce using rule 77
	'['            reduce using rule 77
	'and'          reduce using rule 77
	'behaviour'    reduce using rule 77
	'false'        reduce using rule 77
	'for'          reduce using rule 77
	'if'           reduce using rule 77
	'iff'          reduce using rule 77
	'interface'    reduce using rule 77
	'or'           reduce using rule 77
	'returns'      reduce using rule 77
	'storage'      reduce using rule 77
	'true'         reduce using rule 77
	'|->'          reduce using rule 77
	L_ident        reduce using rule 77
	L_integ        reduce using rule 77
	%eof           reduce using rule 77


State 95

	BExp -> BExp . 'and' BExp                           (rule 37)
	BExp -> BExp . 'or' BExp                            (rule 38)
	BExp -> '(' BExp . ')'                              (rule 45)

	')'            shift, and enter state 132
	'and'          shift, and enter state 83
	'or'           shift, and enter state 84


State 96

	BExp -> Exp . '==' Exp                              (rule 39)
	BExp -> Exp . '=/=' Exp                             (rule 40)
	BExp -> Exp . '<=' Exp                              (rule 41)
	BExp -> Exp . '<' Exp                               (rule 42)
	BExp -> Exp . '>=' Exp                              (rule 43)
	BExp -> Exp . '>' Exp                               (rule 44)
	Exp -> Exp . '+' Exp1                               (rule 48)
	Exp -> Exp . '-' Exp1                               (rule 49)
	Exp -> '(' Exp . ')'                                (rule 50)
	Exp2 -> '(' Exp . ')'                               (rule 57)

	')'            shift, and enter state 125
	'+'            shift, and enter state 85
	'-'            shift, and enter state 86
	'<'            shift, and enter state 97
	'<='           shift, and enter state 98
	'=/='          shift, and enter state 99
	'=='           shift, and enter state 100
	'>'            shift, and enter state 101
	'>='           shift, and enter state 102


State 97

	BExp -> Exp '<' . Exp                               (rule 42)

	'('            shift, and enter state 40
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 41

	Ident          goto state 30
	Integer        goto state 34
	Storage        goto state 35
	Exp            goto state 131
	Exp1           goto state 37
	Exp2           goto state 38

State 98

	BExp -> Exp '<=' . Exp                              (rule 41)

	'('            shift, and enter state 40
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 41

	Ident          goto state 30
	Integer        goto state 34
	Storage        goto state 35
	Exp            goto state 130
	Exp1           goto state 37
	Exp2           goto state 38

State 99

	BExp -> Exp '=/=' . Exp                             (rule 40)

	'('            shift, and enter state 40
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 41

	Ident          goto state 30
	Integer        goto state 34
	Storage        goto state 35
	Exp            goto state 129
	Exp1           goto state 37
	Exp2           goto state 38

State 100

	BExp -> Exp '==' . Exp                              (rule 39)

	'('            shift, and enter state 40
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 41

	Ident          goto state 30
	Integer        goto state 34
	Storage        goto state 35
	Exp            goto state 128
	Exp1           goto state 37
	Exp2           goto state 38

State 101

	BExp -> Exp '>' . Exp                               (rule 44)

	'('            shift, and enter state 40
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 41

	Ident          goto state 30
	Integer        goto state 34
	Storage        goto state 35
	Exp            goto state 127
	Exp1           goto state 37
	Exp2           goto state 38

State 102

	BExp -> Exp '>=' . Exp                              (rule 43)

	'('            shift, and enter state 40
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 41

	Ident          goto state 30
	Integer        goto state 34
	Storage        goto state 35
	Exp            goto state 126
	Exp1           goto state 37
	Exp2           goto state 38

State 103

	ListBExp -> BExp ListBExp .                         (rule 79)

	'behaviour'    reduce using rule 79
	'for'          reduce using rule 79
	'if'           reduce using rule 79
	'iff'          reduce using rule 79
	'interface'    reduce using rule 79
	'returns'      reduce using rule 79
	'storage'      reduce using rule 79
	%eof           reduce using rule 79


State 104

	Exp -> Exp . '+' Exp1                               (rule 48)
	Exp -> Exp . '-' Exp1                               (rule 49)
	Exp -> '(' Exp . ')'                                (rule 50)
	Exp2 -> '(' Exp . ')'                               (rule 57)

	')'            shift, and enter state 125
	'+'            shift, and enter state 85
	'-'            shift, and enter state 86


State 105

	ListExp -> Exp ListExp .                            (rule 81)

	'behaviour'    reduce using rule 81
	'for'          reduce using rule 81
	'if'           reduce using rule 81
	'iff'          reduce using rule 81
	'interface'    reduce using rule 81
	'returns'      reduce using rule 81
	'storage'      reduce using rule 81
	%eof           reduce using rule 81


State 106

	Update -> Storage '=>' . Exp                        (rule 30)

	'('            shift, and enter state 40
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 41

	Ident          goto state 30
	Integer        goto state 34
	Storage        goto state 35
	Exp            goto state 124
	Exp1           goto state 37
	Exp2           goto state 38

State 107

	Update -> Storage '|->' . Exp '=>' Exp              (rule 32)
	Update -> Storage '|->' . Exp                       (rule 33)

	'('            shift, and enter state 40
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 41

	Ident          goto state 30
	Integer        goto state 34
	Storage        goto state 35
	Exp            goto state 123
	Exp1           goto state 37
	Exp2           goto state 38

State 108

	ListUpdate -> Update ListUpdate .                   (rule 83)

	'behaviour'    reduce using rule 83
	'for'          reduce using rule 83
	'if'           reduce using rule 83
	'iff'          reduce using rule 83
	'interface'    reduce using rule 83
	'returns'      reduce using rule 83
	'storage'      reduce using rule 83
	%eof           reduce using rule 83


State 109

	Storage -> Ident ListLookup .                       (rule 34)
	ListLookup -> ListLookup . Lookup                   (rule 77)

	'('            reduce using rule 34
	')'            reduce using rule 34
	'*'            reduce using rule 34
	'+'            reduce using rule 34
	'-'            reduce using rule 34
	'.'            reduce using rule 34
	'/'            reduce using rule 34
	'<'            reduce using rule 34
	'<='           reduce using rule 34
	'=/='          reduce using rule 34
	'=='           reduce using rule 34
	'=>'           reduce using rule 34
	'>'            reduce using rule 34
	'>='           reduce using rule 34
	'['            shift, and enter state 75
	'and'          reduce using rule 34
	'behaviour'    reduce using rule 34
	'false'        reduce using rule 34
	'for'          reduce using rule 34
	'if'           reduce using rule 34
	'iff'          reduce using rule 34
	'interface'    reduce using rule 34
	'or'           reduce using rule 34
	'returns'      reduce using rule 34
	'storage'      reduce using rule 34
	'true'         reduce using rule 34
	'|->'          reduce using rule 34
	L_ident        reduce using rule 34
	L_integ        reduce using rule 34
	%eof           reduce using rule 34

	Lookup         goto state 94

State 110

	Header -> 'storage' ListUpdate .                    (rule 28)

	'behaviour'    reduce using rule 28
	'for'          reduce using rule 28
	'if'           reduce using rule 28
	'iff'          reduce using rule 28
	'interface'    reduce using rule 28
	'returns'      reduce using rule 28
	'storage'      reduce using rule 28
	%eof           reduce using rule 28


State 111

	Header -> 'returns' Exp .                           (rule 29)
	Exp -> Exp . '+' Exp1                               (rule 48)
	Exp -> Exp . '-' Exp1                               (rule 49)

	'+'            shift, and enter state 85
	'-'            shift, and enter state 86
	'behaviour'    reduce using rule 29
	'for'          reduce using rule 29
	'if'           reduce using rule 29
	'iff'          reduce using rule 29
	'interface'    reduce using rule 29
	'returns'      reduce using rule 29
	'storage'      reduce using rule 29
	%eof           reduce using rule 29


State 112

	Header -> 'interface' Ident . '(' ListDecl ')'      (rule 23)

	'('            shift, and enter state 122


State 113

	Header -> 'iff' ListBExp .                          (rule 25)

	'behaviour'    reduce using rule 25
	'for'          reduce using rule 25
	'if'           reduce using rule 25
	'iff'          reduce using rule 25
	'interface'    reduce using rule 25
	'returns'      reduce using rule 25
	'storage'      reduce using rule 25
	%eof           reduce using rule 25


State 114

	Header -> 'iff' 'in' . 'range' Type ListExp         (rule 26)

	'range'        shift, and enter state 121


State 115

	Header -> 'if' ListBExp .                           (rule 27)

	'behaviour'    reduce using rule 27
	'for'          reduce using rule 27
	'if'           reduce using rule 27
	'iff'          reduce using rule 27
	'interface'    reduce using rule 27
	'returns'      reduce using rule 27
	'storage'      reduce using rule 27
	%eof           reduce using rule 27


State 116

	Header -> 'for' 'all' . ListTDecl                   (rule 24)

	L_ident        shift, and enter state 20

	Ident          goto state 49
	TDecl          goto state 50
	ListTDecl      goto state 120

State 117

	Header -> 'behaviour' Ident . 'of' Ident            (rule 22)

	'of'           shift, and enter state 119


State 118

	ListHeader -> Header ListHeader .                   (rule 85)

	%eof           reduce using rule 85


State 119

	Header -> 'behaviour' Ident 'of' . Ident            (rule 22)

	L_ident        shift, and enter state 20

	Ident          goto state 147

State 120

	Header -> 'for' 'all' ListTDecl .                   (rule 24)

	'behaviour'    reduce using rule 24
	'for'          reduce using rule 24
	'if'           reduce using rule 24
	'iff'          reduce using rule 24
	'interface'    reduce using rule 24
	'returns'      reduce using rule 24
	'storage'      reduce using rule 24
	%eof           reduce using rule 24


State 121

	Header -> 'iff' 'in' 'range' . Type ListExp         (rule 26)

	'address'      shift, and enter state 55
	'bool'         shift, and enter state 56
	'bytes32'      shift, and enter state 57
	'int'          shift, and enter state 58
	'int126'       shift, and enter state 59
	'int256'       shift, and enter state 60
	'int8'         shift, and enter state 61
	'uint'         shift, and enter state 62
	'uint126'      shift, and enter state 63
	'uint256'      shift, and enter state 64
	'uint8'        shift, and enter state 65

	Type           goto state 146

State 122

	Header -> 'interface' Ident '(' . ListDecl ')'      (rule 23)

	')'            reduce using rule 71
	'address'      shift, and enter state 55
	'bool'         shift, and enter state 56
	'bytes32'      shift, and enter state 57
	'int'          shift, and enter state 58
	'int126'       shift, and enter state 59
	'int256'       shift, and enter state 60
	'int8'         shift, and enter state 61
	'uint'         shift, and enter state 62
	'uint126'      shift, and enter state 63
	'uint256'      shift, and enter state 64
	'uint8'        shift, and enter state 65

	Decl           goto state 52
	Type           goto state 53
	ListDecl       goto state 145

State 123

	Update -> Storage '|->' Exp . '=>' Exp              (rule 32)
	Update -> Storage '|->' Exp .                       (rule 33)
	Exp -> Exp . '+' Exp1                               (rule 48)
	Exp -> Exp . '-' Exp1                               (rule 49)

	'+'            shift, and enter state 85
	'-'            shift, and enter state 86
	'=>'           shift, and enter state 144
	'behaviour'    reduce using rule 33
	'for'          reduce using rule 33
	'if'           reduce using rule 33
	'iff'          reduce using rule 33
	'interface'    reduce using rule 33
	'returns'      reduce using rule 33
	'storage'      reduce using rule 33
	L_ident        reduce using rule 33
	%eof           reduce using rule 33


State 124

	Update -> Storage '=>' Exp .                        (rule 30)
	Exp -> Exp . '+' Exp1                               (rule 48)
	Exp -> Exp . '-' Exp1                               (rule 49)

	'+'            shift, and enter state 85
	'-'            shift, and enter state 86
	'behaviour'    reduce using rule 30
	'for'          reduce using rule 30
	'if'           reduce using rule 30
	'iff'          reduce using rule 30
	'interface'    reduce using rule 30
	'returns'      reduce using rule 30
	'storage'      reduce using rule 30
	L_ident        reduce using rule 30
	%eof           reduce using rule 30


State 125

	Exp -> '(' Exp ')' .                                (rule 50)
	Exp2 -> '(' Exp ')' .                               (rule 57)

	'('            reduce using rule 57
			(reduce using rule 50)

	')'            reduce using rule 57
			(reduce using rule 50)

	'*'            reduce using rule 57
	'+'            reduce using rule 57
			(reduce using rule 50)

	'-'            reduce using rule 57
			(reduce using rule 50)

	'/'            reduce using rule 57
	'<'            reduce using rule 57
			(reduce using rule 50)

	'<='           reduce using rule 57
			(reduce using rule 50)

	'=/='          reduce using rule 57
			(reduce using rule 50)

	'=='           reduce using rule 57
			(reduce using rule 50)

	'=>'           reduce using rule 57
			(reduce using rule 50)

	'>'            reduce using rule 57
			(reduce using rule 50)

	'>='           reduce using rule 57
			(reduce using rule 50)

	'and'          reduce using rule 57
			(reduce using rule 50)

	'behaviour'    reduce using rule 57
			(reduce using rule 50)

	'false'        reduce using rule 57
			(reduce using rule 50)

	'for'          reduce using rule 57
			(reduce using rule 50)

	'if'           reduce using rule 57
			(reduce using rule 50)

	'iff'          reduce using rule 57
			(reduce using rule 50)

	'interface'    reduce using rule 57
			(reduce using rule 50)

	'or'           reduce using rule 57
			(reduce using rule 50)

	'returns'      reduce using rule 57
			(reduce using rule 50)

	'storage'      reduce using rule 57
			(reduce using rule 50)

	'true'         reduce using rule 57
			(reduce using rule 50)

	L_ident        reduce using rule 57
			(reduce using rule 50)

	L_integ        reduce using rule 57
			(reduce using rule 50)

	%eof           reduce using rule 57
			(reduce using rule 50)



State 126

	BExp -> Exp '>=' Exp .                              (rule 43)
	Exp -> Exp . '+' Exp1                               (rule 48)
	Exp -> Exp . '-' Exp1                               (rule 49)

	'('            reduce using rule 43
	')'            reduce using rule 43
	'+'            shift, and enter state 85
	'-'            shift, and enter state 86
	'and'          reduce using rule 43
	'behaviour'    reduce using rule 43
	'false'        reduce using rule 43
	'for'          reduce using rule 43
	'if'           reduce using rule 43
	'iff'          reduce using rule 43
	'interface'    reduce using rule 43
	'or'           reduce using rule 43
	'returns'      reduce using rule 43
	'storage'      reduce using rule 43
	'true'         reduce using rule 43
	L_ident        reduce using rule 43
	L_integ        reduce using rule 43
	%eof           reduce using rule 43


State 127

	BExp -> Exp '>' Exp .                               (rule 44)
	Exp -> Exp . '+' Exp1                               (rule 48)
	Exp -> Exp . '-' Exp1                               (rule 49)

	'('            reduce using rule 44
	')'            reduce using rule 44
	'+'            shift, and enter state 85
	'-'            shift, and enter state 86
	'and'          reduce using rule 44
	'behaviour'    reduce using rule 44
	'false'        reduce using rule 44
	'for'          reduce using rule 44
	'if'           reduce using rule 44
	'iff'          reduce using rule 44
	'interface'    reduce using rule 44
	'or'           reduce using rule 44
	'returns'      reduce using rule 44
	'storage'      reduce using rule 44
	'true'         reduce using rule 44
	L_ident        reduce using rule 44
	L_integ        reduce using rule 44
	%eof           reduce using rule 44


State 128

	BExp -> Exp '==' Exp .                              (rule 39)
	Exp -> Exp . '+' Exp1                               (rule 48)
	Exp -> Exp . '-' Exp1                               (rule 49)

	'('            reduce using rule 39
	')'            reduce using rule 39
	'+'            shift, and enter state 85
	'-'            shift, and enter state 86
	'and'          reduce using rule 39
	'behaviour'    reduce using rule 39
	'false'        reduce using rule 39
	'for'          reduce using rule 39
	'if'           reduce using rule 39
	'iff'          reduce using rule 39
	'interface'    reduce using rule 39
	'or'           reduce using rule 39
	'returns'      reduce using rule 39
	'storage'      reduce using rule 39
	'true'         reduce using rule 39
	L_ident        reduce using rule 39
	L_integ        reduce using rule 39
	%eof           reduce using rule 39


State 129

	BExp -> Exp '=/=' Exp .                             (rule 40)
	Exp -> Exp . '+' Exp1                               (rule 48)
	Exp -> Exp . '-' Exp1                               (rule 49)

	'('            reduce using rule 40
	')'            reduce using rule 40
	'+'            shift, and enter state 85
	'-'            shift, and enter state 86
	'and'          reduce using rule 40
	'behaviour'    reduce using rule 40
	'false'        reduce using rule 40
	'for'          reduce using rule 40
	'if'           reduce using rule 40
	'iff'          reduce using rule 40
	'interface'    reduce using rule 40
	'or'           reduce using rule 40
	'returns'      reduce using rule 40
	'storage'      reduce using rule 40
	'true'         reduce using rule 40
	L_ident        reduce using rule 40
	L_integ        reduce using rule 40
	%eof           reduce using rule 40


State 130

	BExp -> Exp '<=' Exp .                              (rule 41)
	Exp -> Exp . '+' Exp1                               (rule 48)
	Exp -> Exp . '-' Exp1                               (rule 49)

	'('            reduce using rule 41
	')'            reduce using rule 41
	'+'            shift, and enter state 85
	'-'            shift, and enter state 86
	'and'          reduce using rule 41
	'behaviour'    reduce using rule 41
	'false'        reduce using rule 41
	'for'          reduce using rule 41
	'if'           reduce using rule 41
	'iff'          reduce using rule 41
	'interface'    reduce using rule 41
	'or'           reduce using rule 41
	'returns'      reduce using rule 41
	'storage'      reduce using rule 41
	'true'         reduce using rule 41
	L_ident        reduce using rule 41
	L_integ        reduce using rule 41
	%eof           reduce using rule 41


State 131

	BExp -> Exp '<' Exp .                               (rule 42)
	Exp -> Exp . '+' Exp1                               (rule 48)
	Exp -> Exp . '-' Exp1                               (rule 49)

	'('            reduce using rule 42
	')'            reduce using rule 42
	'+'            shift, and enter state 85
	'-'            shift, and enter state 86
	'and'          reduce using rule 42
	'behaviour'    reduce using rule 42
	'false'        reduce using rule 42
	'for'          reduce using rule 42
	'if'           reduce using rule 42
	'iff'          reduce using rule 42
	'interface'    reduce using rule 42
	'or'           reduce using rule 42
	'returns'      reduce using rule 42
	'storage'      reduce using rule 42
	'true'         reduce using rule 42
	L_ident        reduce using rule 42
	L_integ        reduce using rule 42
	%eof           reduce using rule 42


State 132

	BExp -> '(' BExp ')' .                              (rule 45)

	'('            reduce using rule 45
	')'            reduce using rule 45
	'and'          reduce using rule 45
	'behaviour'    reduce using rule 45
	'false'        reduce using rule 45
	'for'          reduce using rule 45
	'if'           reduce using rule 45
	'iff'          reduce using rule 45
	'interface'    reduce using rule 45
	'or'           reduce using rule 45
	'returns'      reduce using rule 45
	'storage'      reduce using rule 45
	'true'         reduce using rule 45
	L_ident        reduce using rule 45
	L_integ        reduce using rule 45
	%eof           reduce using rule 45


State 133

	TDecl -> Ident ':' Type .                           (rule 59)

	'behaviour'    reduce using rule 59
	'for'          reduce using rule 59
	'if'           reduce using rule 59
	'iff'          reduce using rule 59
	'interface'    reduce using rule 59
	'returns'      reduce using rule 59
	'storage'      reduce using rule 59
	L_ident        reduce using rule 59
	%eof           reduce using rule 59


State 134

	ListDecl -> Decl ',' ListDecl .                     (rule 73)

	')'            reduce using rule 73
	%eof           reduce using rule 73


State 135

	Exp2 -> '(' Exp ')' .                               (rule 57)

	'('            reduce using rule 57
	')'            reduce using rule 57
	'*'            reduce using rule 57
	'+'            reduce using rule 57
	'-'            reduce using rule 57
	'/'            reduce using rule 57
	'<'            reduce using rule 57
	'<='           reduce using rule 57
	'=/='          reduce using rule 57
	'=='           reduce using rule 57
	'=>'           reduce using rule 57
	'>'            reduce using rule 57
	'>='           reduce using rule 57
	'and'          reduce using rule 57
	'behaviour'    reduce using rule 57
	'false'        reduce using rule 57
	'for'          reduce using rule 57
	'if'           reduce using rule 57
	'iff'          reduce using rule 57
	'interface'    reduce using rule 57
	'or'           reduce using rule 57
	'returns'      reduce using rule 57
	'storage'      reduce using rule 57
	'true'         reduce using rule 57
	L_ident        reduce using rule 57
	L_integ        reduce using rule 57
	%eof           reduce using rule 57


State 136

	Exp1 -> Exp1 '/' Exp2 .                             (rule 53)

	'('            reduce using rule 53
	')'            reduce using rule 53
	'*'            reduce using rule 53
	'+'            reduce using rule 53
	'-'            reduce using rule 53
	'/'            reduce using rule 53
	'<'            reduce using rule 53
	'<='           reduce using rule 53
	'=/='          reduce using rule 53
	'=='           reduce using rule 53
	'=>'           reduce using rule 53
	'>'            reduce using rule 53
	'>='           reduce using rule 53
	'and'          reduce using rule 53
	'behaviour'    reduce using rule 53
	'false'        reduce using rule 53
	'for'          reduce using rule 53
	'if'           reduce using rule 53
	'iff'          reduce using rule 53
	'interface'    reduce using rule 53
	'or'           reduce using rule 53
	'returns'      reduce using rule 53
	'storage'      reduce using rule 53
	'true'         reduce using rule 53
	L_ident        reduce using rule 53
	L_integ        reduce using rule 53
	%eof           reduce using rule 53


State 137

	Exp1 -> Exp1 '*' Exp2 .                             (rule 52)

	'('            reduce using rule 52
	')'            reduce using rule 52
	'*'            reduce using rule 52
	'+'            reduce using rule 52
	'-'            reduce using rule 52
	'/'            reduce using rule 52
	'<'            reduce using rule 52
	'<='           reduce using rule 52
	'=/='          reduce using rule 52
	'=='           reduce using rule 52
	'=>'           reduce using rule 52
	'>'            reduce using rule 52
	'>='           reduce using rule 52
	'and'          reduce using rule 52
	'behaviour'    reduce using rule 52
	'false'        reduce using rule 52
	'for'          reduce using rule 52
	'if'           reduce using rule 52
	'iff'          reduce using rule 52
	'interface'    reduce using rule 52
	'or'           reduce using rule 52
	'returns'      reduce using rule 52
	'storage'      reduce using rule 52
	'true'         reduce using rule 52
	L_ident        reduce using rule 52
	L_integ        reduce using rule 52
	%eof           reduce using rule 52


State 138

	Exp -> Exp '-' Exp1 .                               (rule 49)
	Exp1 -> Exp1 . '*' Exp2                             (rule 52)
	Exp1 -> Exp1 . '/' Exp2                             (rule 53)

	'('            reduce using rule 49
	')'            reduce using rule 49
	'*'            shift, and enter state 87
	'+'            reduce using rule 49
	'-'            reduce using rule 49
	'/'            shift, and enter state 88
	'<'            reduce using rule 49
	'<='           reduce using rule 49
	'=/='          reduce using rule 49
	'=='           reduce using rule 49
	'=>'           reduce using rule 49
	'>'            reduce using rule 49
	'>='           reduce using rule 49
	'and'          reduce using rule 49
	'behaviour'    reduce using rule 49
	'false'        reduce using rule 49
	'for'          reduce using rule 49
	'if'           reduce using rule 49
	'iff'          reduce using rule 49
	'interface'    reduce using rule 49
	'or'           reduce using rule 49
	'returns'      reduce using rule 49
	'storage'      reduce using rule 49
	'true'         reduce using rule 49
	L_ident        reduce using rule 49
	L_integ        reduce using rule 49
	%eof           reduce using rule 49


State 139

	Exp -> Exp '+' Exp1 .                               (rule 48)
	Exp1 -> Exp1 . '*' Exp2                             (rule 52)
	Exp1 -> Exp1 . '/' Exp2                             (rule 53)

	'('            reduce using rule 48
	')'            reduce using rule 48
	'*'            shift, and enter state 87
	'+'            reduce using rule 48
	'-'            reduce using rule 48
	'/'            shift, and enter state 88
	'<'            reduce using rule 48
	'<='           reduce using rule 48
	'=/='          reduce using rule 48
	'=='           reduce using rule 48
	'=>'           reduce using rule 48
	'>'            reduce using rule 48
	'>='           reduce using rule 48
	'and'          reduce using rule 48
	'behaviour'    reduce using rule 48
	'false'        reduce using rule 48
	'for'          reduce using rule 48
	'if'           reduce using rule 48
	'iff'          reduce using rule 48
	'interface'    reduce using rule 48
	'or'           reduce using rule 48
	'returns'      reduce using rule 48
	'storage'      reduce using rule 48
	'true'         reduce using rule 48
	L_ident        reduce using rule 48
	L_integ        reduce using rule 48
	%eof           reduce using rule 48


State 140

	BExp -> BExp . 'and' BExp                           (rule 37)
	BExp -> BExp . 'or' BExp                            (rule 38)
	BExp -> BExp 'or' BExp .                            (rule 38)

	'('            reduce using rule 38
	')'            reduce using rule 38
	'and'          shift, and enter state 83
			(reduce using rule 38)

	'behaviour'    reduce using rule 38
	'false'        reduce using rule 38
	'for'          reduce using rule 38
	'if'           reduce using rule 38
	'iff'          reduce using rule 38
	'interface'    reduce using rule 38
	'or'           shift, and enter state 84
			(reduce using rule 38)

	'returns'      reduce using rule 38
	'storage'      reduce using rule 38
	'true'         reduce using rule 38
	L_ident        reduce using rule 38
	L_integ        reduce using rule 38
	%eof           reduce using rule 38


State 141

	BExp -> BExp . 'and' BExp                           (rule 37)
	BExp -> BExp 'and' BExp .                           (rule 37)
	BExp -> BExp . 'or' BExp                            (rule 38)

	'('            reduce using rule 37
	')'            reduce using rule 37
	'and'          shift, and enter state 83
			(reduce using rule 37)

	'behaviour'    reduce using rule 37
	'false'        reduce using rule 37
	'for'          reduce using rule 37
	'if'           reduce using rule 37
	'iff'          reduce using rule 37
	'interface'    reduce using rule 37
	'or'           shift, and enter state 84
			(reduce using rule 37)

	'returns'      reduce using rule 37
	'storage'      reduce using rule 37
	'true'         reduce using rule 37
	L_ident        reduce using rule 37
	L_integ        reduce using rule 37
	%eof           reduce using rule 37


State 142

	Lookup -> '[' Ident ']' .                           (rule 36)

	'('            reduce using rule 36
	')'            reduce using rule 36
	'*'            reduce using rule 36
	'+'            reduce using rule 36
	'-'            reduce using rule 36
	'.'            reduce using rule 36
	'/'            reduce using rule 36
	'<'            reduce using rule 36
	'<='           reduce using rule 36
	'=/='          reduce using rule 36
	'=='           reduce using rule 36
	'=>'           reduce using rule 36
	'>'            reduce using rule 36
	'>='           reduce using rule 36
	'['            reduce using rule 36
	'and'          reduce using rule 36
	'behaviour'    reduce using rule 36
	'false'        reduce using rule 36
	'for'          reduce using rule 36
	'if'           reduce using rule 36
	'iff'          reduce using rule 36
	'interface'    reduce using rule 36
	'or'           reduce using rule 36
	'returns'      reduce using rule 36
	'storage'      reduce using rule 36
	'true'         reduce using rule 36
	'|->'          reduce using rule 36
	L_ident        reduce using rule 36
	L_integ        reduce using rule 36
	%eof           reduce using rule 36


State 143

	Storage -> Storage '.' Ident .                      (rule 35)

	'('            reduce using rule 35
	')'            reduce using rule 35
	'*'            reduce using rule 35
	'+'            reduce using rule 35
	'-'            reduce using rule 35
	'.'            reduce using rule 35
	'/'            reduce using rule 35
	'<'            reduce using rule 35
	'<='           reduce using rule 35
	'=/='          reduce using rule 35
	'=='           reduce using rule 35
	'=>'           reduce using rule 35
	'>'            reduce using rule 35
	'>='           reduce using rule 35
	'and'          reduce using rule 35
	'behaviour'    reduce using rule 35
	'false'        reduce using rule 35
	'for'          reduce using rule 35
	'if'           reduce using rule 35
	'iff'          reduce using rule 35
	'interface'    reduce using rule 35
	'or'           reduce using rule 35
	'returns'      reduce using rule 35
	'storage'      reduce using rule 35
	'true'         reduce using rule 35
	'|->'          reduce using rule 35
	L_ident        reduce using rule 35
	L_integ        reduce using rule 35
	%eof           reduce using rule 35


State 144

	Update -> Storage '|->' Exp '=>' . Exp              (rule 32)

	'('            shift, and enter state 40
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 41

	Ident          goto state 30
	Integer        goto state 34
	Storage        goto state 35
	Exp            goto state 150
	Exp1           goto state 37
	Exp2           goto state 38

State 145

	Header -> 'interface' Ident '(' ListDecl . ')'      (rule 23)

	')'            shift, and enter state 149


State 146

	Header -> 'iff' 'in' 'range' Type . ListExp         (rule 26)

	'('            shift, and enter state 40
	L_ident        shift, and enter state 20
	L_integ        shift, and enter state 41

	Ident          goto state 30
	Integer        goto state 34
	Storage        goto state 35
	Exp            goto state 36
	Exp1           goto state 37
	Exp2           goto state 38
	ListExp        goto state 148

State 147

	Header -> 'behaviour' Ident 'of' Ident .            (rule 22)

	'behaviour'    reduce using rule 22
	'for'          reduce using rule 22
	'if'           reduce using rule 22
	'iff'          reduce using rule 22
	'interface'    reduce using rule 22
	'returns'      reduce using rule 22
	'storage'      reduce using rule 22
	%eof           reduce using rule 22


State 148

	Header -> 'iff' 'in' 'range' Type ListExp .         (rule 26)

	'behaviour'    reduce using rule 26
	'for'          reduce using rule 26
	'if'           reduce using rule 26
	'iff'          reduce using rule 26
	'interface'    reduce using rule 26
	'returns'      reduce using rule 26
	'storage'      reduce using rule 26
	%eof           reduce using rule 26


State 149

	Header -> 'interface' Ident '(' ListDecl ')' .      (rule 23)

	'behaviour'    reduce using rule 23
	'for'          reduce using rule 23
	'if'           reduce using rule 23
	'iff'          reduce using rule 23
	'interface'    reduce using rule 23
	'returns'      reduce using rule 23
	'storage'      reduce using rule 23
	%eof           reduce using rule 23


State 150

	Update -> Storage '|->' Exp '=>' Exp .              (rule 32)
	Exp -> Exp . '+' Exp1                               (rule 48)
	Exp -> Exp . '-' Exp1                               (rule 49)

	'+'            shift, and enter state 85
	'-'            shift, and enter state 86
	'behaviour'    reduce using rule 32
	'for'          reduce using rule 32
	'if'           reduce using rule 32
	'iff'          reduce using rule 32
	'interface'    reduce using rule 32
	'returns'      reduce using rule 32
	'storage'      reduce using rule 32
	L_ident        reduce using rule 32
	%eof           reduce using rule 32


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 86
Number of terminals: 47
Number of non-terminals: 40
Number of states: 151
