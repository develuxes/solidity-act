[Constructor (Var "init") (Var "Token") [Dec Type_string (Var "_symbol"),Dec Type_string (Var "_name"),Dec Type_string (Var "_version"),Dec Type_uint (Var "_totalSupply")] [] (Layout [Assignval Type_string (Var "name") (VarLit (Var "_name")),Assignval Type_string (Var "symbol") (VarLit (Var "_symbol")),Assignval Type_uint256 (Var "totalSupply") (VarLit (Var "_totalSupply")),Assignmap (MappingType Type_address Type_uint) (Var "balanceOf") [Let (VarLit (Var "CALLER")) (VarLit (Var "_totalSupply"))],Assignmap (MappingType Type_address (MappingType Type_address Type_uint)) (Var "allowance") []]),Transition (Var "transfer") (Var "Token") (Var "transfer") [Dec Type_uint256 (Var "value"),Dec Type_address (Var "to")] [Iff [EEq (VarLit (Var "CALLVALUE")) (IntLit 0),ELEQ (VarLit (Var "value")) (Look (VarLit (Var "balanceOf")) (VarLit (Var "CALLER"))),ENeq (VarLit (Var "CALLER")) (EImpl (VarLit (Var "to")) (EAdd (Look (VarLit (Var "balanceOf")) (VarLit (Var "to"))) (ELE (VarLit (Var "value")) (EExp (IntLit 2) (IntLit 256)))))]] (CaseSplit [Case (ENeq (VarLit (Var "CALLER")) (VarLit (Var "to"))) (Direct (StorageReturnP [ThisStorage (Leaf [Change (Look (VarLit (Var "balanceOf")) (VarLit (Var "CALLER"))) (ESub (Look (VarLit (Var "balanceOf")) (VarLit (Var "CALLER"))) (VarLit (Var "value"))),Change (Look (VarLit (Var "balanceOf")) (VarLit (Var "to"))) (EAdd (Look (VarLit (Var "balanceOf")) (VarLit (Var "to"))) (VarLit (Var "value")))])] (IntLit 1))),Case (EEq (VarLit (Var "CALLER")) (VarLit (Var "to"))) (Direct (ReturnP (IntLit 1)))]),Transition (Var "transferFrom") (Var "Token") (Var "transferFrom") [Dec Type_address (Var "src"),Dec Type_address (Var "dst"),Dec Type_uint (Var "amount")] [Iff [ELEQ (VarLit (Var "value")) (Look (VarLit (Var "balanceOf")) (VarLit (Var "CALLER"))),ENeq (VarLit (Var "src")) (EImpl (VarLit (Var "dst")) (EAdd (Look (VarLit (Var "balanceOf")) (VarLit (Var "dst"))) (ELE (VarLit (Var "value")) (EExp (IntLit 2) (IntLit 256))))),ENeq (VarLit (Var "CALLER")) (EImpl (VarLit (Var "src")) (ELEQ (IntLit 0) (ESub (Look (Look (VarLit (Var "allowance")) (VarLit (Var "src"))) (VarLit (Var "CALLER"))) (VarLit (Var "value"))))),EEq (VarLit (Var "CALLVALUE")) (IntLit 0)]] (CaseSplit [Case (ENeq (VarLit (Var "src")) (VarLit (Var "dst"))) (CaseSplit [Case (EEq (VarLit (Var "CALLER")) (VarLit (Var "src"))) (Direct (StorageReturnP [ThisStorage (Leaf [Change (Look (VarLit (Var "balances")) (VarLit (Var "src"))) (ESub (Look (VarLit (Var "balances")) (VarLit (Var "src"))) (VarLit (Var "value"))),Change (Look (VarLit (Var "balances")) (VarLit (Var "dst"))) (EAdd (Look (VarLit (Var "balances")) (VarLit (Var "dst"))) (VarLit (Var "value")))])] (IntLit 1))),Case (ENeq (VarLit (Var "CALLER")) (EAnd (VarLit (Var "src")) (EEq (Look (Look (VarLit (Var "allowance")) (VarLit (Var "src"))) (VarLit (Var "CALLER"))) (EExp (IntLit 2) (ESub (IntLit 256) (IntLit 1)))))) (Direct (StorageReturnP [ThisStorage (Leaf [Change (Look (VarLit (Var "balances")) (VarLit (Var "src"))) (ESub (Look (VarLit (Var "balances")) (VarLit (Var "src"))) (VarLit (Var "value"))),Change (Look (VarLit (Var "balances")) (VarLit (Var "dst"))) (EAdd (Look (VarLit (Var "balances")) (VarLit (Var "dst"))) (VarLit (Var "value")))])] (IntLit 1))),Case Wild (Direct (StorageReturnP [ThisStorage (Leaf [Change (Look (Look (VarLit (Var "allowance")) (VarLit (Var "src"))) (VarLit (Var "CALLER"))) (ESub (Look (Look (VarLit (Var "allowance")) (VarLit (Var "src"))) (VarLit (Var "CALLER"))) (VarLit (Var "value"))),Change (Look (VarLit (Var "balances")) (VarLit (Var "src"))) (ESub (Look (VarLit (Var "balances")) (VarLit (Var "src"))) (VarLit (Var "value"))),Change (Look (VarLit (Var "balances")) (VarLit (Var "dst"))) (EAdd (Look (VarLit (Var "balances")) (VarLit (Var "dst"))) (VarLit (Var "value")))])] (IntLit 1))),Case (EEq (VarLit (Var "src")) (VarLit (Var "dst"))) (Direct (ReturnP (IntLit 1)))])])]
