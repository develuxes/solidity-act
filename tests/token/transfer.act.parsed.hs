[Transition "transferFrom" "Token" transferFrom(AbiUIntType 256 amount, AbiAddressType dst, AbiAddressType src) [Iff (AlexPn 816 37 1) [EEq (AlexPn 973 42 14) (Var "CALLVALUE") (IntLit 0),EImpl (AlexPn 921 41 19) (ENeq (AlexPn 913 41 11) (Var "CALLER") (Var "src")) (ESub (AlexPn 952 41 50) (Look (AlexPn 943 41 41) (Look (AlexPn 938 41 36) (ELEQ (AlexPn 926 41 24) (IntLit 0) (Var "allowance")) (Var "src")) (Var "CALLER")) (Var "value")),EImpl (AlexPn 869 40 19) (ENeq (AlexPn 861 40 11) (Var "src") (Var "dst")) (EAdd (AlexPn 887 40 37) (Look (AlexPn 881 40 31) (Var "balanceOf") (Var "dst")) (EExp (AlexPn 898 40 48) (ELT (AlexPn 895 40 45) (Var "value") (IntLit 2)) (IntLit 256))),Look (AlexPn 842 39 22) (ELEQ (AlexPn 830 39 10) (Var "value") (Var "balanceOf")) (Var "CALLER")]] (Cases [Branch (AlexPn 979 44 1) (ENeq (AlexPn 988 44 10) (Var "src") (Var "dst")) [Leaf (AlexPn 1570 74 1) (EEq (AlexPn 1579 74 10) (Var "src") (Var "dst")) (Post Nothing [] (Just (IntLit 1))),Leaf (AlexPn 1348 64 4) Wild (Post (Just [(Entry "balances" [Var "dst"],EAdd (AlexPn 1544 70 50) (Look (AlexPn 1538 70 44) (Var "balances") (Var "dst")) (Var "value")),(Entry "balances" [Var "src"],ESub (AlexPn 1487 69 50) (Look (AlexPn 1481 69 44) (Var "balances") (Var "src")) (Var "value")),(Entry "allowance" [Var "CALLER",Var "src"],ESub (AlexPn 1430 68 59) (Look (AlexPn 1421 68 50) (Look (AlexPn 1416 68 45) (Var "allowance") (Var "src")) (Var "CALLER")) (Var "value"))]) [] (Just (IntLit 1))),Leaf (AlexPn 1154 55 4) (EAnd (AlexPn 1174 55 24) (ENeq (AlexPn 1166 55 16) (Var "CALLER") (Var "src")) (ESub (AlexPn 1210 55 60) (EExp (AlexPn 1205 55 55) (EEq (AlexPn 1201 55 51) (Look (AlexPn 1192 55 42) (Look (AlexPn 1187 55 37) (Var "allowance") (Var "src")) (Var "CALLER")) (IntLit 2)) (IntLit 256)) (IntLit 1))) (Post (Just [(Entry "balances" [Var "dst"],EAdd (AlexPn 1319 60 41) (Look (AlexPn 1313 60 35) (Var "balances") (Var "dst")) (Var "value")),(Entry "balances" [Var "src"],ESub (AlexPn 1271 59 41) (Look (AlexPn 1265 59 35) (Var "balances") (Var "src")) (Var "value"))]) [] (Just (IntLit 1))),Leaf (AlexPn 1001 46 4) (EEq (AlexPn 1013 46 16) (Var "CALLER") (Var "src")) (Post (Just [(Entry "balances" [Var "dst"],EAdd (AlexPn 1125 51 41) (Look (AlexPn 1119 51 35) (Var "balances") (Var "dst")) (Var "value")),(Entry "balances" [Var "src"],ESub (AlexPn 1077 50 41) (Look (AlexPn 1071 50 35) (Var "balances") (Var "src")) (Var "value"))]) [] (Just (IntLit 1)))]]) Nothing,Transition "transfer" "Token" transfer(AbiAddressType to, AbiUIntType 256 value) [Iff (AlexPn 435 15 1) [EImpl (AlexPn 505 19 18) (ENeq (AlexPn 498 19 11) (Var "CALLER") (Var "to")) (EAdd (AlexPn 522 19 35) (Look (AlexPn 517 19 30) (Var "balanceOf") (Var "to")) (EExp (AlexPn 533 19 46) (ELT (AlexPn 530 19 43) (Var "value") (IntLit 2)) (IntLit 256))),Look (AlexPn 479 18 22) (ELEQ (AlexPn 467 18 10) (Var "value") (Var "balanceOf")) (Var "CALLER"),EEq (AlexPn 453 17 14) (Var "CALLVALUE") (IntLit 0)]] (Cases [Leaf (AlexPn 687 30 1) (EEq (AlexPn 699 30 13) (Var "CALLER") (Var "to")) (Post Nothing [] (Just (IntLit 1))),Leaf (AlexPn 539 21 1) (ENeq (AlexPn 551 21 13) (Var "CALLER") (Var "to")) (Post (Just [(Entry "balanceOf" [Var "to"],EAdd (AlexPn 664 26 41) (Look (AlexPn 659 26 36) (Var "balanceOf") (Var "to")) (Var "value")),(Entry "balanceOf" [Var "CALLER"],ESub (AlexPn 616 25 45) (Look (AlexPn 607 25 36) (Var "balanceOf") (Var "CALLER")) (Var "value"))]) [] (Just (IntLit 1)))]) Nothing,Constructor "init" "Token" constructor(AbiUIntType 256 _totalSupply, AbiStringType _version, AbiStringType _name, AbiStringType _symbol) [] (Creates [AssignMany (StorageDecl (Mapping AbiAddressType (Mapping AbiAddressType (Direct (AbiUIntType 256)))) "allowance") [],AssignMany (StorageDecl (Mapping AbiAddressType (Direct (AbiUIntType 256))) "balanceOf") [Defn (Var "CALLER") (Var "_totalSupply")],AssignVal (StorageDecl (Direct (AbiUIntType 256)) "totalSupply") (Var "_totalSupply"),AssignVal (StorageDecl (Direct AbiStringType) "symbol") (Var "_symbol"),AssignVal (StorageDecl (Direct AbiStringType) "name") (Var "_name")]) [] Nothing Nothing]
