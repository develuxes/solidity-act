behaviour init of BinarySearch
interface constructor()

creates
	uint256[] array := []

invariants
	sorted(array)

where

sorted : uint256[] -> bool
sorted([]) = true
sorted([x]) = true
sorted(x::y::xs) = x <= y and sorted(y::xs)


// Returns the index of elem if elem in array,
// otherwise returns -1.
behaviour search of BinarySearch
interface search(uint256 elem)

returns binarySearch(array, elem, 0, array.length)

ensures

if elem in array
then array[index] = elem
else index = -1

where

index = binarySearch(array, elem, 0, array.length)

binarySearch(uint256[] a, uint256 elem, uint256 left, uint256 right) =
	if left >= right
	then -1
	else
		if a[(right + left) / 2] == elem
		then (right + left) / 2
		else
			if a[(right + left) / 2] < elem
			then binarySearch(a, elem, (right + left) / 2 + 1, right)
			else binarySearch(a, elem, left, (right + left) / 2 - 1)
